/*4. PROCEDURE* PRODUKTE, kategorien DELETE*/
USE VersicherungsDB
GO  

DROP PROCEDURE IF EXISTS usp_PRODUKTE_kategorien_delete
GO
CREATE PROCEDURE 
usp_PRODUKTE_kategorien_delete
AS 
SET NOCOUNT ON;
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN TRANSACTION


BEGIN TRY

--DELETE STATEMENT
DELETE 
FROM PRODUKTE 
WHERE PRODUKTE.NAME = 'WinningInsurance'; 
END TRY 

BEGIN CATCH  
    SELECT   
        
         ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;  

    IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;  
END CATCH;  
IF @@TRANCOUNT > 0  
COMMIT TRANSACTION;
GO




DROP PROCEDURE IF EXISTS usp_PRODUKTE_kategorien_update
GO
CREATE PROCEDURE 
usp_PRODUKTE_kategorien_update
AS 
SET NOCOUNT ON;
GO
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

BEGIN TRY

--UPDATE STATEMENT
UPDATE 
PRODUKTE
SET PRODUKTE.NAME = 'Winning'
WHERE PRODUKTE.ID = 1; 
END TRY 

BEGIN CATCH  
    SELECT   
        
         ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;  

    IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;  
END CATCH;  
IF @@TRANCOUNT > 0  
COMMIT TRANSACTION;
GO




DROP PROCEDURE IF EXISTS usp_produkt_kategorien_select
GO
CREATE PROCEDURE 
usp_produkt_kategorien_select
AS 
SET NOCOUNT ON;
GO
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

BEGIN TRY

--SELECT STATEMENT
SELECT PRODUKTE.NAME
FROM PRODUKTE
INNER JOIN PRODUKT_KATEGORIE
ON PRODUKTE.FK_ID_PRODUKT_KATEGORIE = PRODUKT_KATEGORIE.ID; 
END TRY 

BEGIN CATCH  
    SELECT   
        
         ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;  

    IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;  
END CATCH;  
IF @@TRANCOUNT > 0  
COMMIT TRANSACTION;
GO

DROP PROCEDURE IF EXISTS usp_produkt_kategorien_insert
GO
CREATE PROCEDURE 
usp_produkt_kategorien_insert
AS 
SET NOCOUNT ON;
GO
BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

BEGIN TRY
 
--INSERT STATEMENT
INSERT INTO dbo.PRODUKT_KATEGORIE (NAME) VALUES ('Rechtsschutzversicherungen')
END TRY 

BEGIN CATCH  
    SELECT   
        
         ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;  

    IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;  
END CATCH;  
IF @@TRANCOUNT > 0  
COMMIT TRANSACTION;
GO


